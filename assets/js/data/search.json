[ { "title": "Android.bp syntax and usecase", "url": "/longan/posts/Android.bp-syntax/", "categories": "Android, build", "tags": "android.bp syntax", "date": "2022-07-20 23:55:00 +0800", "snippet": "在实际开发过程中，经常会遇到通过 宏/环境变量 判断是否加载某个模块，这时就需要进行条件编译。Android 7.0 前使用 Android.mk 来编译模块，makefile 支持条件编译；但是 Android 7.0 之后逐步被 Android.bp 取代，Android.bp 本质上是 json 配置文件，不支持条件判断，所以 Google 提供了通过 go 语言来实现 Android.bp 的条件编译。相关的的官方描述：Soong 编译系统Android.bp语法模块 Module Desc cc_defaults..." }, { "title": "audio performance - binder", "url": "/longan/posts/Audio-Performance-binder/", "categories": "audio, performance", "tags": "binder", "date": "2022-07-20 22:50:00 +0800", "snippet": "Binder" }, { "title": "native crash - audioserver crash", "url": "/longan/posts/Audio-Stability/", "categories": "audio, stability", "tags": "audio stability", "date": "2022-07-20 21:50:00 +0800", "snippet": "Audioserver crash" }, { "title": "audio performance - systrace", "url": "/longan/posts/Audio-Performance-systrace/", "categories": "audio, performance", "tags": "systrace", "date": "2022-07-20 21:50:00 +0800", "snippet": "Systrace" }, { "title": "Android HAL 与 HIDL 开发实例", "url": "/longan/posts/Android-HIDL-Example/", "categories": "Android, build", "tags": "android HIDL", "date": "2022-07-14 00:55:00 +0800", "snippet": "Android 8.0之后，/dev/binder拓展多出了两个域，即/dev/hwbinder和/dev/vndbinder， /dev/hwbinder 主要用于 HIDL 接口的通信， /dev/vndbinder 则是用于 vendor 进程之间的 AIDL 通信。作为 OEM/ODM 厂商，需要了解 Android 硬件的开发和集成流程，把自己硬件添加到 ROM 中，比如集成杜比音效。 关于 ROM：国内的定制系统开发者，经常会陷入自己的产品究竟是应该称为 OS (ColorOS) 还是 UI (MIUI) 的争论，为了避免此类争论和表示谦虚，会自称为 ROM。应该就是 ..." }, { "title": "Android.bp makefile and soong", "url": "/longan/posts/Android.bp-makefile-soong/", "categories": "Android, build", "tags": "android.bp, makefile, soong", "date": "2022-07-13 22:55:00 +0800", "snippet": "Android编译系统，Android.bp、Soong以及Android.mk" }, { "title": "android build system", "url": "/longan/posts/Android-Build-System/", "categories": "Android, build", "tags": "android build system", "date": "2022-07-13 21:55:00 +0800", "snippet": "最近，集成杜比音效用到了很多Android编译知识，记录一下 Android编译系统，Android.bp、Soong以及Android.mk Android.bp语法记录，vintf-fragments字段等 Android HIDL使用实例Android 构造系统AOSP源码build/README.md, This is the Makefile-based portion of the Android Build System. For documentation on how to run a build, see Usage.txt For a list of b..." }, { "title": "audio volume", "url": "/longan/posts/Audio-Volume/", "categories": "audio, framework", "tags": "audio volume", "date": "2021-11-03 21:55:00 +0800", "snippet": "简单记录下 Android 原生音量管理，主要包括： Audio 初始化阶段加载音量曲线：Android 音量管理在 audioserver 的 AudioPolicyManager 模块中实现，在 audioserver 初始化时会创建并初始化 AudioPolicyManager，APM 初始化会从 audio_policy_volumes.xml 和 default_volume_tables.xml 中加载音量曲线 音量调节流程：音量调节（音量键/音量条）最终也是在 APM 根据音量曲线计算出音量增益，在 AudioFlinger 的播放线程重采样是生效音量曲线加载在 APM..." }, { "title": "audio playback/record", "url": "/longan/posts/Audio-playback-record/", "categories": "audio, framework", "tags": "audio playback/record", "date": "2021-11-03 21:50:00 +0800", "snippet": "数据流：编解码 重采样 混音 过音效 AudioTrack::set、start、write Audioclient::prepareTracks_l、AudioFlinger::threadLoop客户端AudioTrackOpenSL ESAAudioMediaPlayeraudioserveraudiohal" }, { "title": "AudioTrack::start/stop", "url": "/longan/posts/AudioTrack-startstop/", "categories": "audio, framework", "tags": "audio playback", "date": "2021-11-03 21:32:00 +0800", "snippet": "AudioTrack::start/stop，开始/停止播放，主要是： start、startOutput、start_output_stream stop、stopOutput、stop_output_stream pause、flush、releaseAudioTrack::startstartOutputAudioTrack::stopstopOutputAudioTrack::pauseremove活跃的trackAudioTrack::flush清空bufferAudioTrack::releaseremoveTrack_l" }, { "title": "AudioTrack::set", "url": "/longan/posts/AudioTrack-set/", "categories": "audio, framework", "tags": "audio playback", "date": "2021-11-03 00:32:00 +0800", "snippet": "AudioTrack::set，AudioTrack的初始化，主要是： 采样率、声道数、flags和framecount等参数设置 创建track、createTrack_l，选择通路getOutputForAttrAudioTrack::setnative层的set可以设置更多的参数，所以SoundPool、OpenSL ES和AAudio等直接跳过了Java层API，直接使用的native的AudioTrack构造函数。set 参数Java层JNI调用SoundpoolOpenSL ESAAudiocreateTrack_lgetOutputForAttr" }, { "title": "Android audio framework", "url": "/longan/posts/Android-Audio-Framework/", "categories": "audio, framework", "tags": "audio framework", "date": "2021-08-20 00:32:00 +0800", "snippet": "Android 音频服务框架的内容说多不多，说少也不少，网上也有各种的教程。我看过的比较系统性的描述就是林学森老师的《深入理解Android 内核设计思想》，里面分为 AudioTrack、AudioFlinger 和 AudioPolicyService 三部分来讲解 Audio 模块，但是随着 Android 的演变，现在已经不能涵盖遇到的所有场景，所以从自身实际了解出发，总结下这部分内容： Audio data processing: 有点类似于 AudioTrack 及其扩展，音频数据流处理，主要包括音频播放录音框架，音量、音效和变声等分别在重采样、混音等阶段完成等。 Out..." }, { "title": "What is a callback function?", "url": "/longan/posts/what-is-a-callback-function/", "categories": "Question, others", "tags": "callback", "date": "2021-06-02 00:32:00 +0800", "snippet": "什么是回调函数呢？what is a callback function?回调函数，听名字很让人不解。回调函数是一个函数： 可以被另外的函数访问，以及 在第一个函数执行完成后被调用，可以把回调函数理解为在caller（回调函数被当作参数传入的）的结尾被调用的函数。也可以叫做call after函数。这个结构对异步操作非常有用，可以在前一个事件完成时触发一个活动。Pseudocode:// A function which accepts another function as an argument// (and will automatically invoke that func..." }, { "title": "Why are public static final array a security hole?", "url": "/longan/posts/why-are-public-static-final-array-a-security-hole/", "categories": "Question, others", "tags": "static final, array", "date": "2021-06-01 00:32:00 +0800", "snippet": "Effective Java说： // Potential security hole! static public final Thing[] VALUES = {…};public static final array声明static final公共字段标志着类常量，非常适合原始数据类型（int、double等）和不可变类。对于数组，问题在于即使数组引用是常量，数组元素仍然是可变的；由于它是一个字段，不受更改保护、不可控，所以不常用。为了解决这个问题，可以将数组字段限制为私有/包私有，这样可以缩小可疑代码的范围。通常，更好的做法是取消数组使用List或者集合类型。通过集合，只有通..." }, { "title": "How to concatenate a string and an int?", "url": "/longan/posts/how-to-concatenate-a-stdstring-and-an-int/", "categories": "Question, others", "tags": "String + int in C++", "date": "2021-04-06 23:32:00 +0800", "snippet": "对于Java和Python来说，操作符+就足够了，但是C++不支持直接拼接字符串和数字。字符串拼接数字按字母顺序，std::string name = &quot;John&quot;;int age = 21;std::string result;// 1. with Boostresult = name + boost::lexical_cast&amp;lt;std::string&amp;gt;(age);// 2. with C++11result = name + std::to_string(age);// 3. with FastFormat.Formatfastform..." }, { "title": "Question list", "url": "/longan/posts/Questions/", "categories": "Question, others", "tags": "Question list", "date": "2021-04-02 00:32:00 +0800", "snippet": "这篇博文目的是记录学习工作总遇到的问题，作为博客写作的一个方向，解决这些问题。CPP1 字符串拼接数字对于Java和Python来说，操作符+就足够了，但是C++不支持直接拼接字符串和数字。2 调用其他类的属性方法对于Java和Python来说，import对应包/类就可以，但是C++不行，extern外部变量声明也不能在类里面。那么，AudioFlinger怎么才能使用AudioDetectionManager里面的mTrackInfo呢？ updateAudioDetectState函数里面调用了AudioDetectionManager里面的函数， AudioDetect特性的..." }, { "title": "Enable Google Page Views", "url": "/longan/posts/enable-google-pv/", "categories": "Blogging, Tutorial", "tags": "google analytics, pageviews", "date": "2021-01-04 07:32:00 +0800", "snippet": "This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv disabled unless you have a good reason. If your website has low traffic, the page views count would discourage you to write ..." }, { "title": "Customize the Favicon", "url": "/longan/posts/customize-the-favicon/", "categories": "Blogging, Tutorial", "tags": "favicon", "date": "2019-08-11 00:34:00 +0800", "snippet": "In Chirpy, the image files of Favicons are placed in assets/img/favicons/. You may need to replace them with your own. So let’s see how to customize these Favicons.With a square image (PNG, JPG or GIF) in hand, open the site Favicon &amp;amp; App Icon Generator and upload your original image.Clic..." }, { "title": "Getting Started", "url": "/longan/posts/getting-started/", "categories": "Blogging, Tutorial", "tags": "getting started", "date": "2019-08-09 20:55:00 +0800", "snippet": "PrerequisitesFollow the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll and Bundler.InstallationThere are two ways to get the theme: Install from RubyGems - Easy to update, isolate irrelevant project files so you can focus on writing. Fork on GitHub - Convenient for custom de..." }, { "title": "Writing a New Post", "url": "/longan/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2019-08-08 14:10:00 +0800", "snippet": "Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts/ of the root directory. Please note that the EXTENSION must be one of md and markdown.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD..." }, { "title": "Text and Typography", "url": "/longan/posts/text-and-typography/", "categories": "Blogging, Demo", "tags": "typography", "date": "2019-08-08 11:33:00 +0800", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at o..." } ]
